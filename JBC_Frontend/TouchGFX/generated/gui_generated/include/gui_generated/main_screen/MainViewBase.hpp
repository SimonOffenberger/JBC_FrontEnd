/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/graph/GraphScroll.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/Button.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::BoxWithBorder graphBackground;
    touchgfx::TextAreaWithOneWildcard textAreaState;
    touchgfx::TextArea LabelSetPoint;
    touchgfx::TextArea LabelState;
    touchgfx::GraphScroll<101> Graph;
    touchgfx::GraphElementGridY GraphMajorYAxisGrid;
    touchgfx::GraphLabelsX GraphMajorXAxisLabel;
    touchgfx::GraphLabelsY GraphMajorYAxisLabel;
    touchgfx::GraphElementLine GraphLine1;
    touchgfx::PainterRGB565 GraphLine1Painter;
    touchgfx::Button ButtonUp;
    touchgfx::Button ButtonDown;
    touchgfx::TextAreaWithOneWildcard TextAreaSetPoint;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREASETPOINT_SIZE = 4;
    touchgfx::Unicode::UnicodeChar TextAreaSetPointBuffer[TEXTAREASETPOINT_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // MAINVIEWBASE_HPP
